package org.chorus_oss.protocol.packets

import kotlinx.io.Sink
import kotlinx.io.Source
import org.chorus_oss.protocol.ProtocolInfo
import org.chorus_oss.protocol.core.*
import org.chorus_oss.protocol.core.types.Boolean
import org.chorus_oss.protocol.core.types.Int
import org.chorus_oss.protocol.core.types.Long
import org.chorus_oss.protocol.core.types.String
import org.chorus_oss.protocol.types.Vector3f

data class LevelSoundEventPacket(
    val soundType: SoundType,
    val position: Vector3f,
    val extraData: Int,
    val entityType: String,
    val babyMob: Boolean,
    val global: Boolean,
    val actorUniqueID: Long
) : Packet(id) {
    companion object : PacketCodec<LevelSoundEventPacket> {
        enum class SoundType(val id: Int) {
            ITEM_USE_ON(0),
            HIT(1),
            STEP(2),
            FLY(3),
            JUMP(4),
            BREAK(5),
            PLACE(6),
            HEAVY_STEP(7),
            GALLOP(8),
            FALL(9),
            AMBIENT(10),
            AMBIENT_BABY(11),
            AMBIENT_IN_WATER(12),
            BREATHE(13),
            DEATH(14),
            DEATH_IN_WATER(15),
            DEATH_TO_ZOMBIE(16),
            HURT(17),
            HURT_IN_WATER(18),
            MAD(19),
            BOOST(20),
            BOW(21),
            SQUISH_BIG(22),
            SQUISH_SMALL(23),
            FALL_BIG(24),
            FALL_SMALL(25),
            SPLASH(26),
            FIZZ(27),
            FLAP(28),
            SWIM(29),
            DRINK(30),
            EAT(31),
            TAKEOFF(32),
            SHAKE(33),
            PLOP(34),
            LAND(35),
            SADDLE(36),
            ARMOR(37),
            MOB_ARMOR_STAND_PLACE(38),
            ADD_CHEST(39),
            THROW(40),
            ATTACK(41),
            ATTACK_NODAMAGE(42),
            ATTACK_STRONG(43),
            WARN(44),
            SHEAR(45),
            MILK(46),
            THUNDER(47),
            EXPLODE(48),
            FIRE(49),
            IGNITE(50),
            FUSE(51),
            STARE(52),
            SPAWN(53),
            SHOOT(54),
            BREAK_BLOCK(55),
            LAUNCH(56),
            BLAST(57),
            LARGE_BLAST(58),
            TWINKLE(59),
            REMEDY(60),
            UNFECT(61),
            LEVELUP(62),
            BOW_HIT(63),
            BULLET_HIT(64),
            EXTINGUISH_FIRE(65),
            ITEM_FIZZ(66),
            CHEST_OPEN(67),
            CHEST_CLOSED(68),
            SHULKERBOX_OPEN(69),
            SHULKERBOX_CLOSED(70),
            ENDERCHEST_OPEN(71),
            ENDERCHEST_CLOSED(72),
            POWER_ON(73),
            POWER_OFF(74),
            ATTACH(75),
            DETACH(76),
            DENY(77),
            TRIPOD(78),
            POP(79),
            DROP_SLOT(80),
            NOTE(81),
            THORNS(82),
            PISTON_IN(83),
            PISTON_OUT(84),
            PORTAL(85),
            WATER(86),
            LAVA_POP(87),
            LAVA(88),
            BURP(89),
            BUCKET_FILL_WATER(90),
            BUCKET_FILL_LAVA(91),
            BUCKET_EMPTY_WATER(92),
            BUCKET_EMPTY_LAVA(93),
            ARMOR_EQUIP_CHAIN(94),
            ARMOR_EQUIP_DIAMOND(95),
            ARMOR_EQUIP_GENERIC(96),
            ARMOR_EQUIP_GOLD(97),
            ARMOR_EQUIP_IRON(98),
            ARMOR_EQUIP_LEATHER(99),
            ARMOR_EQUIP_ELYTRA(100),
            RECORD_13(101),
            RECORD_CAT(102),
            RECORD_BLOCKS(103),
            RECORD_CHIRP(104),
            RECORD_FAR(105),
            RECORD_MALL(106),
            RECORD_MELLOHI(107),
            RECORD_STAL(108),
            RECORD_STRAD(109),
            RECORD_WARD(110),
            RECORD_11(111),
            RECORD_WAIT(112),
            STOP_RECORD(113),
            FLOP(114),
            ELDERGUARDIAN_CURSE(115),
            MOB_WARNING(116),
            MOB_WARNING_BABY(117),
            TELEPORT(118),
            SHULKER_OPEN(119),
            SHULKER_CLOSE(120),
            HAGGLE(121),
            HAGGLE_YES(122),
            HAGGLE_NO(123),
            HAGGLE_IDLE(124),
            CHORUS_GROW(125),
            CHORUS_DEATH(126),
            GLASS(127),
            POTION_BREWED(128),
            CAST_SPELL(129),
            PREPARE_ATTACK(130),
            PREPARE_SUMMON(131),
            PREPARE_WOLOLO(132),
            FANG(133),
            CHARGE(134),
            CAMERA_TAKE_PICTURE(135),
            LEASHKNOT_PLACE(136),
            LEASHKNOT_BREAK(137),
            GROWL(138),
            WHINE(139),
            PANT(140),
            PURR(141),
            PURREOW(142),
            DEATH_MIN_VOLUME(143),
            DEATH_MID_VOLUME(144),
            IMITATE_BLAZE(145),
            IMITATE_CAVE_SPIDER(146),
            IMITATE_CREEPER(147),
            IMITATE_ELDER_GUARDIAN(148),
            IMITATE_ENDER_DRAGON(149),
            IMITATE_ENDERMAN(150),
            IMITATE_ENDERMITE(151),
            IMITATE_EVOCATION_ILLAGER(152),
            IMITATE_GHAST(153),
            IMITATE_HUSK(154),
            IMITATE_ILLUSION_ILLAGER(155),
            IMITATE_MAGMA_CUBE(156),
            IMITATE_POLAR_BEAR(157),
            IMITATE_SHULKER(158),
            IMITATE_SILVERFISH(159),
            IMITATE_SKELETON(160),
            IMITATE_SLIME(161),
            IMITATE_SPIDER(162),
            IMITATE_STRAY(163),
            IMITATE_VEX(164),
            IMITATE_VINDICATION_ILLAGER(165),
            IMITATE_WITCH(166),
            IMITATE_WITHER(167),
            IMITATE_WITHER_SKELETON(168),
            IMITATE_WOLF(169),
            IMITATE_ZOMBIE(170),
            IMITATE_ZOMBIE_PIGMAN(171),
            IMITATE_ZOMBIE_VILLAGER(172),
            BLOCK_END_PORTAL_FRAME_FILL(173),
            BLOCK_END_PORTAL_SPAWN(174),
            RANDOM_ANVIL_USE(175),
            BOTTLE_DRAGONBREATH(176),
            PORTAL_TRAVEL(177),
            ITEM_TRIDENT_HIT(178),
            ITEM_TRIDENT_RETURN(179),
            ITEM_TRIDENT_RIPTIDE_1(180),
            ITEM_TRIDENT_RIPTIDE_2(181),
            ITEM_TRIDENT_RIPTIDE_3(182),
            ITEM_TRIDENT_THROW(183),
            ITEM_TRIDENT_THUNDER(184),
            ITEM_TRIDENT_HIT_GROUND(185),
            DEFAULT(186),
            FLETCHING_TABLE_USE(187),
            ELEMENT_CONSTRUCTOR_OPEN(188),
            ICE_BOMB_HIT(189),
            BALLOON_POP(190),
            LT_REACTION_ICE_BOMB(191),
            LT_REACTION_BLEACH(192),
            LT_REACTION_E_PASTE(193),
            LT_REACTION_E_PASTE2(194),
            LT_REACTION_GLOW_STICK(195),
            LT_REACTION_GLOW_STICK2(196),
            LT_REACTION_LUMINOL(197),
            LT_REACTION_SALT(198),
            LT_REACTION_FERTILIZER(199),
            LT_REACTION_FIREBALL(200),
            LT_REACTION_MG_SALT(201),
            LT_REACTION_MISC_FIRE(202),
            LT_REACTION_FIRE(203),
            LT_REACTION_MISC_EXPLOSION(204),
            LT_REACTION_MISC_MYSTICAL(205),
            LT_REACTION_MISC_MYSTICAL2(206),
            LT_REACTION_PRODUCT(207),
            SPARKLER_USE(208),
            GLOWSTICK_USE(209),
            SPARKLER_ACTIVE(210),
            CONVERT_TO_DROWNED(211),
            BUCKET_FILL_FISH(212),
            BUCKET_EMPTY_FISH(213),
            BUBBLE_UP(214),
            BUBBLE_DOWN(215),
            BUBBLE_POP(216),
            BUBBLE_UP_INSIDE(217),
            BUBBLE_DOWN_INSIDE(218),
            BABY_HURT(219),
            BABY_DEATH(220),
            BABY_STEP(221),
            BABY_SPAWN(222),
            BORN(223),
            BLOCK_TURTLE_EGG_BREAK(224),
            BLOCK_TURTLE_EGG_CRACK(225),
            BLOCK_TURTLE_EGG_HATCH(226),
            TURTLE_LAY_EGG(227),
            BLOCK_TURTLE_EGG_ATTACK(228),
            BEACON_ACTIVATE(229),
            BEACON_AMBIENT(230),
            BEACON_DEACTIVATE(231),
            BEACON_POWER(232),
            CONDUIT_ACTIVATE(233),
            CONDUIT_AMBIENT(234),
            CONDUIT_ATTACK(235),
            CONDUIT_DEACTIVATE(236),
            CONDUIT_SHORT(237),
            SWOOP(238),
            BLOCK_BAMBOO_SAPLING_PLACE(239),
            PRE_SNEEZE(240),
            SNEEZE(241),
            AMBIENT_TAME(242),
            SCARED(243),
            BLOCK_SCAFFOLDING_CLIMB(244),
            CROSSBOW_LOADING_START(245),
            CROSSBOW_LOADING_MIDDLE(246),
            CROSSBOW_LOADING_END(247),
            CROSSBOW_SHOOT(248),
            CROSSBOW_QUICK_CHARGE_START(249),
            CROSSBOW_QUICK_CHARGE_MIDDLE(250),
            CROSSBOW_QUICK_CHARGE_END(251),
            AMBIENT_AGGRESSIVE(252),
            AMBIENT_WORRIED(253),
            CANT_BREED(254),
            SHIELD_BLOCK(255),
            LECTERN_BOOK_PLACE(256),
            GRINDSTONE_USE(257),
            BELL(258),
            CAMPFIRE_CRACKLE(259),
            ROAR(260),
            STUN(261),
            SWEET_BERRY_BUSH_HURT(262),
            SWEET_BERRY_BUSH_PICK(263),
            CARTOGRAPHY_TABLE_USE(264),
            STONECUTTER_USE(265),
            COMPOSTER_EMPTY(266),
            COMPOSTER_FILL(267),
            COMPOSTER_FILL_LAYER(268),
            COMPOSTER_READY(269),
            BARREL_OPEN(270),
            BARREL_CLOSE(271),
            RAID_HORN(272),
            LOOM_USE(273),
            AMBIENT_IN_RAID(274),
            UI_CARTOGRAPHY_TABLE_USE(275),
            UI_STONECUTTER_USE(276),
            UI_LOOM_USE(277),
            SMOKER_USE(278),
            BLAST_FURNACE_USE(279),
            SMITHING_TABLE_USE(280),
            SCREECH(281),
            SLEEP(282),
            FURNACE_USE(283),
            MOOSHROOM_CONVERT(284),
            MILK_SUSPICIOUSLY(285),
            CELEBRATE(286),
            JUMP_PREVENT(287),
            AMBIENT_POLLINATE(288),
            BEEHIVE_DRIP(289),
            BEEHIVE_ENTER(290),
            BEEHIVE_EXIT(291),
            BEEHIVE_WORK(292),
            BEEHIVE_SHEAR(293),
            HONEYBOTTLE_DRINK(294),
            AMBIENT_CAVE(295),
            RETREAT(296),
            CONVERT_TO_ZOMBIFIED(297),
            ADMIRE(298),
            STEP_LAVA(299),
            TEMPT(300),
            PANIC(301),
            ANGRY(302),
            AMBIENT_WARPED_FOREST(303),
            AMBIENT_SOULSAND_VALLEY(304),
            AMBIENT_NETHER_WASTES(305),
            AMBIENT_BASALT_DELTAS(306),
            AMBIENT_CRIMSON_FOREST(307),
            RESPAWN_ANCHOR_CHARGE(308),
            RESPAWN_ANCHOR_DEPLETE(309),
            RESPAWN_ANCHOR_SET_SPAWN(310),
            RESPAWN_ANCHOR_AMBIENT(311),
            SOUL_ESCAPE_QUIET(312),
            SOUL_ESCAPE_LOUD(313),
            RECORD_PIGSTEP(314),
            LINK_COMPASS_TO_LODESTONE(315),
            USE_SMITHING_TABLE(316),
            EQUIP_NETHERITE(317),
            AMBIENT_LOOP_WARPED_FOREST(318),
            AMBIENT_LOOP_SOULSAND_VALLEY(319),
            AMBIENT_LOOP_NETHER_WASTES(320),
            AMBIENT_LOOP_BASALT_DELTAS(321),
            AMBIENT_LOOP_CRIMSON_FOREST(322),
            AMBIENT_ADDITION_WARPED_FOREST(323),
            AMBIENT_ADDITION_SOULSAND_VALLEY(324),
            AMBIENT_ADDITION_NETHER_WASTES(325),
            AMBIENT_ADDITION_BASALT_DELTAS(326),
            AMBIENT_ADDITION_CRIMSON_FOREST(327),
            SCULK_SENSOR_POWER_ON(328),
            SCULK_SENSOR_POWER_OFF(329),
            BUCKET_FILL_POWDER_SNOW(330),
            BUCKET_EMPTY_POWDER_SNOW(331),
            POINTED_DRIPSTONE_CAULDRON_DRIP_LAVA(332),
            POINTED_DRIPSTONE_CAULDRON_DRIP_WATER(333),
            POINTED_DRIPSTONE_DRIP_LAVA(334),
            POINTED_DRIPSTONE_DRIP_WATER(335),
            CAVE_VINES_PICK_BERRIES(336),
            BIG_DRIPLEAF_TILT_DOWN(337),
            BIG_DRIPLEAF_TILT_UP(338),
            COPPER_WAX_ON(339),
            COPPER_WAX_OFF(340),
            SCRAPE(341),
            PLAYER_HURT_DROWN(342),
            PLAYER_HURT_ON_FIRE(343),
            PLAYER_HURT_FREEZE(344),
            USE_SPYGLASS(345),
            STOP_USING_SPYGLASS(346),
            AMETHYST_BLOCK_CHIME(347),
            AMBIENT_SCREAMER(348),
            HURT_SCREAMER(349),
            DEATH_SCREAMER(350),
            MILK_SCREAMER(351),
            JUMP_TO_BLOCK(352),
            PRE_RAM(353),
            PRE_RAM_SCREAMER(354),
            RAM_IMPACT(355),
            RAM_IMPACT_SCREAMER(356),
            SQUID_INK_SQUIRT(357),
            GLOW_SQUID_INK_SQUIRT(358),
            CONVERT_TO_STRAY(359),
            CAKE_ADD_CANDLE(360),
            EXTINGUISH_CANDLE(361),
            AMBIENT_CANDLE(362),
            BLOCK_CLICK(363),
            BLOCK_CLICK_FAIL(364),
            SCULK_CATALYST_BLOOM(365),
            SCULK_SHRIEKER_SHRIEK(366),
            WARDEN_NEARBY_CLOSE(367),
            WARDEN_NEARBY_CLOSER(368),
            WARDEN_NEARBY_CLOSEST(369),
            WARDEN_SLIGHTLY_ANGRY(370),
            RECORD_OTHERSIDE(371),
            TONGUE(372),
            CRACK_IRON_GOLEM(373),
            REPAIR_IRON_GOLEM(374),
            LISTENING(375),
            HEARTBEAT(376),
            HORN_BREAK(377),
            SCULK_PLACE(378),
            SCULK_SPREAD(379),
            SCULK_CHARGE(380),
            SCULK_SENSOR_PLACE(381),
            SCULK_SHRIEKER_PLACE(382),
            GOAT_CALL_0(383),
            GOAT_CALL_1(384),
            GOAT_CALL_2(385),
            GOAT_CALL_3(386),
            GOAT_CALL_4(387),
            GOAT_CALL_5(388),
            GOAT_CALL_6(389),
            GOAT_CALL_7(390),
            GOAT_CALL_8(391),
            GOAT_CALL_9(392),
            GOAT_HARMONY_0(393),
            GOAT_HARMONY_1(394),
            GOAT_HARMONY_2(395),
            GOAT_HARMONY_3(396),
            GOAT_HARMONY_4(397),
            GOAT_HARMONY_5(398),
            GOAT_HARMONY_6(399),
            GOAT_HARMONY_7(400),
            GOAT_HARMONY_8(401),
            GOAT_HARMONY_9(402),
            GOAT_MELODY_0(403),
            GOAT_MELODY_1(404),
            GOAT_MELODY_2(405),
            GOAT_MELODY_3(406),
            GOAT_MELODY_4(407),
            GOAT_MELODY_5(408),
            GOAT_MELODY_6(409),
            GOAT_MELODY_7(410),
            GOAT_MELODY_8(411),
            GOAT_MELODY_9(412),
            GOAT_BASS_0(413),
            GOAT_BASS_1(414),
            GOAT_BASS_2(415),
            GOAT_BASS_3(416),
            GOAT_BASS_4(417),
            GOAT_BASS_5(418),
            GOAT_BASS_6(419),
            GOAT_BASS_7(420),
            GOAT_BASS_8(421),
            GOAT_BASS_9(422),
            IMITATE_WARDEN(426),
            LISTENING_ANGRY(427),
            ITEM_GIVEN(428),
            ITEM_TAKEN(429),
            DISAPPEARED(430),
            REAPPEARED(431),
            MILK_DRINK(432),
            FROGSPAWN_HATCHED(433),
            LAY_SPAWN(434),
            FROGSPAWN_BREAK(435),
            SONIC_BOOM(436),
            SONIC_CHARGE(437),
            ITEM_THROWN(438),
            RECORD_5(439),
            CONVERT_TO_FROG(440),
            RECORD_PLAYING(441),
            ENCHANTING_TABLE_USE(442),
            STEP_SAND(443),
            DASH_READY(444),
            BUNDLE_DROP_CONTENTS(445),
            BUNDLE_INSERT(446),
            BUNDLE_REMOVE_ONE(447),
            PRESSURE_PLATE_CLICK_OFF(448),
            PRESSURE_PLATE_CLICK_ON(449),
            BUTTON_CLICK_OFF(450),
            BUTTON_CLICK_ON(451),
            DOOR_OPEN(452),
            DOOR_CLOSE(453),
            TRAPDOOR_OPEN(454),
            TRAPDOOR_CLOSE(455),
            FENCE_GATE_OPEN(456),
            FENCE_GATE_CLOSE(457),
            INSERT(458),
            PICKUP(459),
            INSERT_ENCHANTED(460),
            PICKUP_ENCHANTED(461),
            BRUSH(462),
            BRUSH_COMPLETED(463),
            SHATTER_DECORATED_POT(464),
            BREAK_DECORATED_POD(465),
            SNIFFER_EGG_CRACK(466),
            SNIFFER_EGG_HATCHED(467),
            WAXED_SIGN_INTERACT_FAIL(468),
            RECORD_RELIC(469),
            BUMP(470),
            PUMPKIN_CARVE(471),
            CONVERT_HUSK_TO_ZOMBIE(472),
            PIG_DEATH(473),
            HOGLIN_ZOMBIFIED(474),
            AMBIENT_UNDERWATER_ENTER(475),
            AMBIENT_UNDERWATER_EXIT(476),
            BOTTLE_FILL(477),
            BOTTLE_EMPTY(478),
            CRAFTER_CRAFT(479),
            CRAFTER_FAILED(480),
            BLOCK_DECORATED_POT_INSERT(481),
            BLOCK_DECORATED_POT_INSERT_FAIL(482),
            CRAFTER_DISABLE_SLOT(483),
            TRIAL_SPAWNER_OPEN_SHUTTER(484),
            TRIAL_SPAWNER_EJECT_ITEM(485),
            TRIAL_SPAWNER_DETECT_PLAYER(486),
            TRIAL_SPAWNER_SPAWN_MOB(487),
            TRIAL_SPAWNER_CLOSE_SHUTTER(488),
            TRIAL_SPAWNER_AMBIENT(489),
            BLOCK_COPPER_BULB_TURN_ON(490),
            BLOCK_COPPER_BULB_TURN_OFF(491),
            AMBIENT_IN_AIR(492),
            BREEZE_WIND_CHARGE_BURST(493),
            IMITATE_BREEZE(494),
            MOB_ARMADILLO_BRUSH(495),
            MOB_ARMADILLO_SCUTE_DROP(496),
            ARMOR_EQUIP_WOLF(497),
            ARMOR_UNEQUIP_WOLF(498),
            REFLECT(499),
            VAULT_OPEN_SHUTTER(500),
            VAULT_CLOSE_SHUTTER(501),
            VAULT_EJECT_ITEM(502),
            VAULT_INSERT_ITEM(503),
            VAULT_INSERT_ITEM_FAIL(504),
            VAULT_AMBIENT(505),
            VAULT_ACTIVATE(506),
            VAULT_DEACTIVATE(507),
            HURT_REDUCED(508),
            WIND_CHARGE_BURST(509),
            IMITATE_BOGGED(510),
            ARMOR_CRACK_WOLF(511),
            ARMOR_BREAK_WOLF(512),
            ARMOR_REPAIR_WOLF(513),
            MACE_SMASH_AIR(514),
            MACE_SMASH_GROUND(515),
            TRAIL_SPAWNER_CHARGE_ACTIVATE(516),
            TRAIL_SPAWNER_AMBIENT_OMINOUS(517),
            OMINOUS_ITEM_SPAWNER_SPAWN_ITEM(518),
            OMINOUS_BOTTLE_END_USE(519),
            MACE_SMASH_HEAVY_GROUND(520),
            OMINOUS_ITEM_SPAWNER_SPAWN_ITEM_BEGIN(521),
            APPLY_EFFECT_BAD_OMEN(523),
            APPLY_EFFECT_RAID_OMEN(524),
            APPLY_EFFECT_TRIAL_OMEN(525),
            OMINOUS_ITEM_SPAWNER_ABOUT_TO_SPAWN_ITEM(526),
            CREATOR(527),
            RECORD_CREATOR_MUSIC_BOX(528),
            RECORD_PRECIPICE(529),
            VAULT_REJECT_REWARDED_PLAYER(530),
            IMITATE_DROWNED(531),
            IMITATE_CREAKING(532),
            BUNDLE_INSERT_FAIL(533),
            SPONGE_ABSORB(534),
            BLOCK_CREAKING_HEART_TRAIL(536),
            CREAKING_HEART_SPAWN(537),
            ACTIVATE(538),
            DEACTIVATE(539),
            FREEZE(540),
            UNFREEZE(541),
            OPEN(542),
            OPEN_LONG(543),
            CLOSE(544),
            CLOSE_LONG(545),
            IMITATE_PHANTOM(546),
            IMITATE_ZOGLIN(547),
            IMITATE_GUARDIAN(548),
            IMITATE_RAVAGER(549),
            IMITATE_PILLAGER(550),
            PLACE_IN_WATER(551),
            STATE_CHANGE(552),
            IMITATE_HAPPY_GHAST(553),
            UNEQUIP_GENERIC(554),
            UNDEFINED(555);

            companion object : ProtoCodec<SoundType> {
                override fun serialize(
                    value: SoundType,
                    stream: Sink
                ) {
                    ProtoVAR.Int.serialize(value.id, stream)
                }

                override fun deserialize(stream: Source): SoundType {
                    return ProtoVAR.Int.deserialize(stream).let {
                        entries.find { e -> e.id == it }!!
                    }
                }
            }
        }

        override val id: Int
            get() = ProtocolInfo.LEVEL_EVENT_PACKET

        override fun serialize(
            value: LevelSoundEventPacket,
            stream: Sink
        ) {
            SoundType.serialize(value.soundType, stream)
            Vector3f.serialize(value.position, stream)
            ProtoVAR.Int.serialize(value.extraData, stream)
            Proto.String.serialize(value.entityType, stream)
            Proto.Boolean.serialize(value.babyMob, stream)
            Proto.Boolean.serialize(value.global, stream)
            ProtoLE.Long.serialize(value.actorUniqueID, stream)
        }

        override fun deserialize(stream: Source): LevelSoundEventPacket {
            return LevelSoundEventPacket(
                soundType = SoundType.deserialize(stream),
                position = Vector3f.deserialize(stream),
                extraData = ProtoVAR.Int.deserialize(stream),
                entityType = Proto.String.deserialize(stream),
                babyMob = Proto.Boolean.deserialize(stream),
                global = Proto.Boolean.deserialize(stream),
                actorUniqueID = ProtoLE.Long.deserialize(stream)
            )
        }
    }
}
